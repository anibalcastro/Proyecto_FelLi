<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFbSURBVFhH7dW/
        K0ZRHMfxB8mPlBRFZrsyGgyKSQYjGRQmo8FiNBkYLZgkm4WBxMAfIInCIoMfSZHFz/f73tR9PGzOsdxP
        veqc71PP995z7z2nkCfPLylHYzqMn0ps4g5lFmLGhsv4wIyF2LGpzVcQ/e7HYfMdVFmImT684hD1FmKm
        E8+4QLOF2DmFS3+MrQBWMYte+IWV5BpewCPuA3iC/68z9KMow3jHLqotBEgLJnAFe02jKBa8wjW4C4ZK
        A7ZhrxEL2SzAH+aTWbjU4QgPKNruK7AOL2LSQsD0wD5TySyTWhzA5zRoIVDcZS9hr5K4LCfwDQ65Hbva
        t+mwNE3oSofB4nnjBvhv2cd5OowfV/gFS8nsHzIHv4LuZBY5A3jDRjKLmBq443rse/L6GP48rRjFWIab
        zSJu4LL78nk2BMnXmfKdd72HIYQ8a5LtvB0dGW1w+fPk+SGFwic48GzdB7bdUAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAADsOAAA7DgHMtqGDAAACxklE
        QVRYR73X2ctMYQDH8bEv4Q6lSEJ2woU7ypIkS+HGToTcuLJLhBRK4saWtSxJkYQL/4MUkUjZbkSW7L7f
        03l0ZjLznoee+dXnfec8M2ee55x5tlP5j7RCJ3TMXydPewzGYhzACdzCTRzDfizCILRDMR3QGz0R3djO
        mIULeIWf+JX7kQvHvvcC5zEd3iEzDo9xEd6x0hmNy/gEK7ABV7ERKzADM7ESW3ANb+BnP8KGDMV4fMVd
        hEY1TFssxBP4Zf7fiuHwp6gXb/UobEc49yEOoXQD2mAt3uEbzmAYYjMEZ2HFfo+NKdUAO5mVf8A2dEFM
        7IDrcBg2/i2svFQDxsJb9x3+prW9uUyswIpCpUUNG2Bvt8P5QYdY7JWH2H/smGuwusBjy33/r5mNz3gE
        x3tTY892jHr1myxodhyrjnEnEV+nirPgQCxDXwtClsCrtw/8S8crm9Y4Duuab0GIc7uF67OjtNkB69qZ
        HRFvy0lY6J1IneWwLuvMFibH5W04W020IHEmw3nGOrM5wT8uqzZgkgWJMwVVDTChYyzNjtLGEVD1E5h9
        sNBlNnXsfNZlZ/wTl94vOIjoHUtEnPDcT9iAqmHYC1PRIztKF/cTL+GE1/Tp3oQ54BTqLkqp4hTvQuf2
        bpoF9TISroxuRIscPnXX8hbSFe4PvfrTaLgxdf/mB8NWKuyCn6IPYuPasgvunh/AftAwR2CF8nbdwRUc
        RXfEpBt2w+95DXfRLSY0wCv3DlzCGLhZLRuH8gj4LOGs51K/AKWGeGiA4/Ve/trb75W45W70+4VtuZ/1
        HM+9Dztd6fklNGAV3Dy4P3yfl/nQcQN74R5vHubAz+7BdYQHE8/xXLfnUXE29Lb55GO8Klcw14tnKD6K
        qfZR7Tms2HM8NzoDMAHOjsU4cfTDXGyA+34fPM7Bu7YZvtcfTZtk7JgxnbMmlcpv+u28WpjYYB4AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>